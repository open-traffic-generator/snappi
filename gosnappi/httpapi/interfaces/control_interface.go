// This file is autogenerated. Do not modify
package interfaces

import (
	"net/http"

	gosnappi "github.com/open-traffic-generator/snappi/gosnappi"
	"github.com/open-traffic-generator/snappi/gosnappi/httpapi"
)

type ControlController interface {
	Routes() []httpapi.Route
	SetControlState(w http.ResponseWriter, r *http.Request)
	SetControlAction(w http.ResponseWriter, r *http.Request)
	SetTransmitState(w http.ResponseWriter, r *http.Request)
	SetLinkState(w http.ResponseWriter, r *http.Request)
	SetCaptureState(w http.ResponseWriter, r *http.Request)
	UpdateFlows(w http.ResponseWriter, r *http.Request)
	SetRouteState(w http.ResponseWriter, r *http.Request)
	SendPing(w http.ResponseWriter, r *http.Request)
	SetProtocolState(w http.ResponseWriter, r *http.Request)
	SetDeviceState(w http.ResponseWriter, r *http.Request)
}

type ControlHandler interface {
	GetController() ControlController
	/*
		SetControlState: POST /control/state
		Description: Sets the operational state of configured resources.
	*/
	SetControlState(rbody gosnappi.ControlState, r *http.Request) (gosnappi.SetControlStateResponse, error)
	/*
		SetControlAction: POST /control/action
		Description: Triggers actions against configured resources.
	*/
	SetControlAction(rbody gosnappi.ControlAction, r *http.Request) (gosnappi.SetControlActionResponse, error)
	/*
			SetTransmitState: POST /control/transmit
			Description: Deprecated: Please use `set_control_state` with `traffic.flow_transmit` choice instead

		Deprecated: Please use `set_control_state` with `traffic.flow_transmit` choice instead

		Updates the state of configuration resources on the traffic generator.
		The Response.Warnings in the Success response is available for implementers to disclose additional information about a state change including any implicit changes that are outside the scope of the state change.
	*/
	SetTransmitState(rbody gosnappi.TransmitState, r *http.Request) (gosnappi.SetTransmitStateResponse, error)
	/*
			SetLinkState: POST /control/link
			Description: Deprecated: Please use `set_control_state` with `port.link` choice instead

		Deprecated: Please use `set_control_state` with `port.link` choice instead

		Updates the state of configuration resources on the traffic generator.
	*/
	SetLinkState(rbody gosnappi.LinkState, r *http.Request) (gosnappi.SetLinkStateResponse, error)
	/*
			SetCaptureState: POST /control/capture
			Description: Deprecated: Please use `set_control_state` with `port.capture` choice instead

		Deprecated: Please use `set_control_state` with `port.capture` choice instead

		Updates the state of configuration resources on the traffic generator.
	*/
	SetCaptureState(rbody gosnappi.CaptureState, r *http.Request) (gosnappi.SetCaptureStateResponse, error)
	/*
			UpdateFlows: POST /control/flows
			Description: Deprecated: Please use `update_config` with `flow` choice instead

		Deprecated: Please use `update_config` with `flow` choice instead

		Updates flow properties without disruption of transmit state.
	*/
	UpdateFlows(rbody gosnappi.FlowsUpdate, r *http.Request) (gosnappi.UpdateFlowsResponse, error)
	/*
			SetRouteState: POST /control/routes
			Description: Deprecated: Please use `set_control_state` with `protocol.route` choice instead

		Deprecated: Please use `set_control_state` with `protocol.route` choice instead

		Updates the state of configuration resources on the traffic generator.
	*/
	SetRouteState(rbody gosnappi.RouteState, r *http.Request) (gosnappi.SetRouteStateResponse, error)
	/*
			SendPing: POST /control/ping
			Description: Deprecated: Please use `set_control_action` with `protocol.ipv*.ping` choice instead

		Deprecated: Please use `set_control_action` with `protocol.ipv*.ping` choice instead

		API to send an IPv4 and/or IPv6 ICMP Echo Request(s) between endpoints. For each endpoint 1 ping packet will be sent and API shall wait for ping response to either be successful or timeout. The API wait timeout for each request is 300ms.
	*/
	SendPing(rbody gosnappi.PingRequest, r *http.Request) (gosnappi.SendPingResponse, error)
	/*
			SetProtocolState: POST /control/protocols
			Description: Deprecated: Please use `set_control_state` with `protocol.all` choice instead

		Deprecated: Please use `set_control_state` with `protocol.all` choice instead

		Sets all configured protocols to `start` or `stop` state.
	*/
	SetProtocolState(rbody gosnappi.ProtocolState, r *http.Request) (gosnappi.SetProtocolStateResponse, error)
	/*
			SetDeviceState: POST /control/devices
			Description: Deprecated: Please use `set_control_state` with `protocol` choice instead

		Deprecated: Please use `set_control_state` with `protocol` choice instead

		Set specific state/actions on device configuration resources on the traffic generator.
	*/
	SetDeviceState(rbody gosnappi.DeviceState, r *http.Request) (gosnappi.SetDeviceStateResponse, error)
}
