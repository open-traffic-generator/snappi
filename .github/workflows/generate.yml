# Generate snappi classes from the open-traffic-generator models
# Run pytests
# Create distributions
# Test distribution installation
# If the version number has changed, create release, upload to pypi
# 
name: Build

on: [push, workflow_dispatch]

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python

      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Get VERSION number
      id: get_version
      run: echo "::set-output name=version::$(cat VERSION)"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade -r requirements.txt

    - name: Generate python sdist and wheel distributions
      run: |
        python setup.py sdist --formats=gztar bdist_wheel --universal

    - name: Test wheel distribution installation
      run: |
        python -m pip install --upgrade dist/snappi-${{ steps.get_version.outputs.version }}-py2.py3-none-any.whl[test]

    - name: Run sanity unit tests
      run: |
        sudo ${{ env.pythonLocation }}/python -m pytest -v

    # to create a release it just needs a tag
    # the tag name MUST be in the following format:
    #   v<major>.<minor>.<build>
    # git tag -a <tag name> -m "message"
    # git push origin --tags
    - name: Get git tag
      run: echo "HEAD_TAG=$(git tag --points-at HEAD)" >> $GITHUB_ENV

    - name: Create Release
      if: env.HEAD_TAG != ''
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        release_name: Release ${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload Python Package To Release
      if: env.HEAD_TAG != ''
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/*
        tag: v${{ steps.get_version.outputs.version }}
        overwrite: true
        file_glob: true   

    - name: Upload Models Release File To Release
      if: env.HEAD_TAG != ''
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: models-release
        tag: v${{ steps.get_version.outputs.version }}
        overwrite: true
        file_glob: true 

    - name: Upload Assets to Pypi
      if: env.HEAD_TAG != ''
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*

